

# Conventional commit message format
# Format: <type>(<scope>): <description>
# Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert, merge
# Also allows Git's standard merge commit format: "Merge branch '...' of ... into ..."

# Regex for conventional commits
conventional_regex='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert|merge)(\(.+\))?: .{1,50}'

# Regex for Git merge commits
merge_regex='^Merge branch .* of .* into .*'
merge_regex='^Merge branch .* of .*'

# Combined regex - either conventional or merge format
commit_regex="($conventional_regex|$merge_regex)"

if ! grep -qE "$commit_regex" "$1"; then
    echo "‚ùå Invalid commit message format."
    echo "‚úÖ Please use either:"
    echo "   1. Conventional commit format: <type>(<scope>): <description>"
    echo "   2. Git's standard merge format: Merge branch '...' of ... into ..."
    echo ""
    echo "üìù Examples:"
    echo "   feat: add new wallet connection feature"
    echo "   fix(wallet): resolve persistence issue"
    echo "   docs: update README with setup instructions"
    echo "   style: format code with prettier"
    echo "   refactor(components): improve wallet button"
    echo "   Merge branch 'main' of https://github.com/user/repo into feature/branch"
    echo ""
    echo "üîß Types: feat, fix, docs, style, refactor, test, chore, perf, ci, build, revert, merge"
    exit 1
fi

echo "‚úÖ Commit message format is valid!" 
